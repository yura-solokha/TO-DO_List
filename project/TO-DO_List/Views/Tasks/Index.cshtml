@model IEnumerable<TO_DO_List.Models.Tasks.TaskViewModel>

<form asp-controller="Tasks" asp-action="Index" method="get" class="form-inline">
    <div class="form-row align-items-center filter_select">
        <div class="col-sm-3 my-1">
            <label for="category" class="sr-only">Категорія:</label>
            <select name="categoryId" id="category" class="form-control">
                <option value="">Всі</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>

        <div class="col-sm-3 my-1">
            <label for="isDone" class="sr-only">Виконано:</label>
            <select name="isDone" id="isDone" class="form-control">
                <option value="">Всі</option>
                <option value="true">Так</option>
                <option value="false">Ні</option>
            </select>
        </div>

        <div class="col-sm-3 my-1">
            <label for="priority" class="mr-2">Пріоритет:</label>
            <select name="priority" id="priority" class="form-control">
                <option value="">Всі</option>
                <option value="1">Низький</option>
                <option value="0">Високий</option>
            </select>
        </div>

        <div class="col-auto my-1">
            <button type="submit" class="btn btn-secondary">Фільтрувати</button>
        </div>
    </div>
</form>
<body class="task-body">

@if (!Model.Any())
{
    <p>Ще немає завдань.</p>
}
else
{
    @foreach (var task in Model)
    {
        @if (task.ParentId == null)
        {
            <div class="task-container">
                <div class="task-rectangle">
                    <div class="task-header">
                        <h3 class="task-name">@task.Name</h3>
                        <p class="task-deadline">@task.Deadline.ToString("dd.MM.yyyy")</p>
                        <div class="task-buttons">
                            <form asp-controller="Tasks" asp-action="CreateSubTask" method="get">
                                <input type="hidden" name="parentId" value="@task.Id"/>
                                <button class="add-subtask-button">+</button>
                            </form>
                            @if (task.Subtasks != null && task.Subtasks.Any())
                            {
                                <button class="show-subtasks-button">▶</button>
                            }
                        </div>
                        <form asp-controller="Tasks" asp-action="MarkTask" method="post">
                            <input type="hidden" name="taskId" value="@task.Id"/>
                            <input type="checkbox" name="isDone" class="is_done_checkbox" id="isTaskDone" checked="@task.IsDone" value="true" onchange="this.form.submit()"/>
                            <input type="hidden" name="isDone" value="false"/>
                        </form>
                        <form asp-controller="Tasks" asp-action="DeleteTask" method="post">
                            <input type="hidden" name="taskId" value="@task.Id"/>
                            <button class="btn btn-toolbar">🗑️</button>
                        </form>
                    </div>
                    <div class="task-body">
                        <p class="task-description">Опис: @task.Description</p>
                    </div>
                </div>
                @if (task.Subtasks != null && task.Subtasks.Any())
                {
                    <div class="subtasks-container">
                        @foreach (var subtask in task.Subtasks)
                        {
                            <div class="subtask-container keep">
                                <div class="subtask-rectangle">
                                    <div class="subtask-header">
                                        <h4 class="subtask-name">@subtask.Name</h4>
                                        <form asp-controller="Tasks" asp-action="MarkTask" method="post">
                                            <input type="hidden" name="taskId" value="@subtask.Id"/>
                                            <input type="checkbox" name="isDone" class="is_done_checkbox_sub" id="isTaskDone" checked="@subtask.IsDone" value="true" onchange="this.form.submit()"/>
                                            <input type="hidden" name="isDone" value="false"/>
                                        </form>
                                        <form asp-controller="Tasks" asp-action="DeleteTask" method="post">
                                            <input type="hidden" name="taskId" value="@subtask.Id"/>
                                            <button class="btn btn-toolbar">🗑️</button>
                                        </form>
                                    </div>
                                    <p class="subtask-description">Опис: @subtask.Description</p>
                                </div>
                            </div>
                        }
                    </div>
                }
                <form asp-controller="Tasks" asp-action="MarkTask" method="post" id="complete-task-form">
                    <input type="hidden" name="taskId" value="@task.Id"/>
                    <input type="hidden" name="isDone" value="true"/>
                </form>

            </div>
        }
    }
}
<form asp-controller="Tasks" asp-action="CreateTask" method="get">
    <button type="submit" class="btn btn-dark">Створити завдання</button>
</form>
<script>
    // Find all checkboxes with the "is_done_checkbox" class and add a change event listener to each one
    const checkboxes = document.querySelectorAll(".is_done_checkbox_sub");
    for (let i = 0; i < checkboxes.length; i++) {
        checkboxes[i].addEventListener("change", function() {
            // Check if all checkboxes are checked
            const allChecked = [...checkboxes].every(checkbox => checkbox.checked);
            if (allChecked) {
                // Submit the "complete-task-form" form
                const form = document.getElementById("complete-task-form");
                form.submit();
            }
        });
    }
</script>

<script>
  // Find all "show-subtasks-button" elements and add a click event listener to each one
  const showSubtasksButtons = document.querySelectorAll(".show-subtasks-button");
  for (let i = 0; i < showSubtasksButtons.length; i++) {
    showSubtasksButtons[i].addEventListener("click", function() {
      const subtasksContainer = this.closest(".task-container").querySelector(".subtasks-container");
      if (subtasksContainer.style.display === "none") {
        subtasksContainer.style.display = "block";
        this.innerText = "▼";
      } else {
        subtasksContainer.style.display = "none";
        this.innerText = "▶";
      }
    });
  }
</script>
</body>